@using BlazorApp.Pages
@using BlazorApp.Components
@using BlazorApp.Services
@page "/"
@inherits ArenaCompenent

<div class="container-fluid">
    @if (Loading)
    {
        <h2>Loading.......</h2>
    }
    <InitiativeTrackView Enemies="ArenaEnemies" />
    <div class="row expand-panel-control" @onclick="ExpandPanelController.ExpandPanel">
        <span>Select Enemy Groups</span>
    </div>
    <div class="row enemy-selection @(ExpandPanelController.IsExpanded ? "expanded" : "collapsed")">

        @foreach (var group in EnemyService.EnemyGroups.Keys)
        {
            <button class="btn btn-dark"
                @onclick="@(e => ToggleModal(e, group))">
                @group
            </button>
        }

    </div>
    <div class="row expand-panel-control">
        <span>Enemy Groups</span>
    </div>
    <div class="row">
        @foreach (var group in EnemyService.EnemyGroups)
        {
            if (group.Value.Enemies.Count() > 0)
            {
                <div class="drop-area enemy">
                    <div class="initiative-card not-draggable enemy" @onclick="(() => SelectGroup(group.Key))">
                        <span>@group.Value.Name</span>
                        @foreach (var enemy in group.Value.Enemies)
                        {
                            <p class="enemy-name">@enemy.Name</p>
                        }
                    </div>
                </div>
            }
        }
    </div>

</div>
@if (ModalDTO != null)
{
    <ModalView_ ModalDTO="ModalDTO" />
}

